{"version":3,"file":null,"sources":["/Users/leeyeh/work/LeanCloud/js-realtime-sdk/src/utils.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/src/websocket-plus.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/src/errors.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/proto/message-compiled.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/proto/message.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/src/connection.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/src/client.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/src/messages/message.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/src/conversation.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/src/conversation-query.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/package.json","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/src/im-client.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/src/message-parser.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/src/messages/typed-message.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/src/messages/text-message.js","/Users/leeyeh/work/LeanCloud/js-realtime-sdk/src/realtime.js"],"sourcesContent":["import { Promise } from 'rsvp';\nimport isPlainObject from 'lodash/isPlainObject';\nimport { default as d } from 'debug';\n\nexport const tryAll = promiseConstructors => {\n  const promise = new Promise(promiseConstructors[0]);\n  if (promiseConstructors.length === 1) {\n    return promise;\n  }\n  return promise.catch(() => tryAll(promiseConstructors.slice(1)));\n};\n\nexport const tap = interceptor => value => (interceptor(value), value);\n\nconst debug = d('LC:Cache');\nexport class Cache {\n  constructor(name = 'anonymous') {\n    this.name = name;\n    this._map = {};\n  }\n\n  get(key) {\n    const cache = this._map[key];\n    if (cache) {\n      const expired = cache.expiredAt && cache.expiredAt < Date.now();\n      if (!expired) {\n        debug(`[${this.name}] hit: ${key} ${cache.value}`);\n        return cache.value;\n      }\n      debug(`[${this.name}] expired: ${key}`);\n    }\n    debug(`[${this.name}] missed: ${key}`);\n    return null;\n  }\n\n  set(key, value, ttl) {\n    debug(`[${this.name}] set: ${key} ${value} ${ttl}`);\n    const cache = this._map[key] = {\n      value,\n    };\n    if (typeof ttl === 'number') {\n      cache.expiredAt = Date.now() + ttl;\n    }\n  }\n}\n\nexport const decodeDate = date => {\n  if (!date) return date;\n  if (typeof date === 'string') {\n    return new Date(date);\n  }\n  if (date.__type === 'Date' && date.iso) {\n    return new Date(date.iso);\n  }\n  return date;\n};\n\nexport const keyRemap = (keymap, obj) =>\n  Object.keys(obj).reduce((newObj, key) => {\n    const newKey = keymap[key] || key;\n    return Object.assign(newObj, {\n      [newKey]: obj[key],\n    });\n  }, {});\n\nexport const union = (a, b) => Array.from(new Set([...a, ...b]));\nexport const difference = (a, b) => Array.from(\n  (bSet => new Set(a.filter(x => !bSet.has(x))))(new Set(b))\n);\n\n// debug utility\nconst removeNull = obj => {\n  if (!isPlainObject(obj)) return obj;\n  const object = Object.assign({}, obj);\n  for (const prop in object) {\n    if (object.hasOwnProperty(prop)) {\n      const value = object[prop];\n      if (value === null) {\n        delete object[prop];\n      } else {\n        object[prop] = removeNull(value);\n      }\n    }\n  }\n  return object;\n};\nexport const trim = message => removeNull(JSON.parse(JSON.stringify(message)));\n","// WebSocket with auto reconnecting feature, backup endpoint and EventEmitter interface.\n\nimport { Promise } from 'rsvp';\nimport { tryAll } from './utils';\n\nimport { default as d } from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport StateMachine from 'javascript-state-machine';\n\nconst debug = d('LC:WebSocketPlus');\n\nconst WebSocket = global.WebSocket || global.MozWebSocket || require('ws');\nconst HEARTBEAT_TIME = 60000;\nconst TIMEOUT_TIME = 180000;\n\nclass WebSocketPlus extends EventEmitter {\n  constructor(getUrls, protocol) {\n    debug('initializing WebSocketPlus');\n    if (typeof WebSocket === 'undefined') {\n      throw new Error('WebSocket is undefined. Polyfill is required in this runtime.');\n    }\n    super();\n    if (typeof getUrls !== 'function') {\n      this._getUrls = () => Promise.resolve(getUrls);\n    } else {\n      this._getUrls = getUrls;\n    }\n    this._protocol = protocol;\n    this.init();\n    this._createWs(this._getUrls, this._protocol).then(\n      () => this.open(),\n      error => this.throw(error)\n    );\n    this.__postponeTimers = this._postponeTimers.bind(this);\n  }\n\n  _createWs(getUrls, protocol) {\n    return getUrls().then(wsUrls => {\n      let urls = wsUrls;\n      if (!(urls instanceof Array)) {\n        urls = [urls];\n      }\n      return tryAll(\n        urls.map(url => (resolve, reject) => {\n          debug(`connect [${url}] ${protocol}`);\n          const ws = protocol ? new WebSocket(\n            url, protocol\n          ) : new WebSocket(url);\n          ws.binaryType = this.binaryType || 'blob';\n          ws.onopen = () => resolve(ws);\n          ws.onerror = error => {\n            if (error instanceof Error) {\n              return reject(error);\n            }\n            // in browser, error event is useless\n            return reject(new Error(`Failed to connect [${url}]`));\n          };\n        })\n      ).then(ws => {\n        this._ws = ws;\n        this._ws.onclose = this._handleClose.bind(this);\n        this._ws.onmessage = this._handleMessage.bind(this);\n        return ws;\n      });\n    });\n  }\n  _destroyWs() {\n    const ws = this._ws;\n    if (!ws) return;\n    ws.onopen = ws.onclose = ws.onerror = ws.onmessage = null;\n    this._ws = null;\n    ws.close();\n  }\n\n  onopen() {\n    debug('open');\n    this.emit('open');\n  }\n  onconnected() {\n    this._startConnectionKeeper();\n  }\n  onleaveconnected() {\n    this._stopConnectionKeeper();\n  }\n  ondisconnect() {\n    debug('disconnect');\n    this._destroyWs();\n    this._retryCount = 0;\n    this.emit('disconnect');\n    this.retry();\n  }\n  onreconnect() {\n    debug('reconnect');\n    this.emit('reconnect');\n  }\n  onretry() {\n    setTimeout(() => {\n      if (this.is('offline')) {\n        this._createWs(this._getUrls, this._protocol).then(\n          () => this.reconnect(),\n          () => this.retry()\n        );\n        debug(`retry [${this._retryCount}]`);\n        this.emit('retry', this._retryCount);\n      }\n    }, this._retryCount * 3000);\n    this._retryCount++;\n  }\n  onclose() {\n    debug('close');\n    this._ws.close();\n  }\n  onerror(event, from, to, error) {\n    debug('error', error);\n    this.emit('error', error);\n  }\n\n  ping() {\n    if (this._ws.ping) {\n      this._ws.ping();\n    } else {\n      console.warn(`The WebSocket implement does not support sending ping frame.\n        Override ping method to use application defined ping/pong mechanism.`);\n    }\n  }\n\n  _postponeTimers() {\n    debug('_postponeTimers');\n    this._clearTimers();\n    this._heartbeatTimer = setInterval(() => {\n      debug('ping');\n      this.ping();\n    }, HEARTBEAT_TIME);\n    this._timeoutTimer = setTimeout(() => {\n      debug('timeout');\n      this.disconnect();\n    }, TIMEOUT_TIME);\n  }\n  _clearTimers() {\n    if (this._heartbeatTimer) {\n      clearInterval(this._heartbeatTimer);\n    }\n    if (this._timeoutTimer) {\n      clearTimeout(this._timeoutTimer);\n    }\n  }\n  _startConnectionKeeper() {\n    debug('start connection keeper');\n    const addListener = this._ws.addListener || this._ws.addEventListener;\n    addListener.call(this._ws, 'message', this.__postponeTimers);\n    this._postponeTimers();\n  }\n  _stopConnectionKeeper() {\n    debug('stop connection keeper');\n    // websockets/ws#489\n    const removeListener = this._ws.removeListener || this._ws.removeEventListener;\n    removeListener.call(this._ws, 'message', this.__postponeTimers);\n    this._clearTimers();\n  }\n\n  _handleClose(event) {\n    debug(`ws closed [${event.code}] ${event.reason}`);\n    // socket closed manually, ignore close event.\n    if (this.isFinished()) return;\n    this.handleClose(event);\n  }\n  handleClose() {\n    // reconnect\n    this.disconnect();\n  }\n\n  send(data) {\n    debug('send', data);\n    this._ws.send(data);\n  }\n\n  _handleMessage(event) {\n    debug('message', event.data);\n    this.handleMessage(event.data);\n  }\n  handleMessage(message) {\n    this.emit('message', message);\n  }\n}\n\nStateMachine.create({\n  target: WebSocketPlus.prototype,\n  initial: {\n    state: 'initialized',\n    event: 'init',\n    defer: true,\n  },\n  terminal: 'closed',\n  events: [{\n    name: 'open',\n    from: 'initialized',\n    to: 'connected',\n  }, {\n    name: 'disconnect',\n    from: 'connected',\n    to: 'offline',\n  }, {\n    name: 'retry',\n    from: 'offline',\n    to: 'offline',\n  }, {\n    name: 'reconnect',\n    from: 'offline',\n    to: 'connected',\n  }, {\n    name: 'close',\n    from: ['connected', 'offline'],\n    to: 'closed',\n  }, {\n    name: 'throw',\n    from: '*',\n    to: 'error',\n  }],\n});\n\nexport default WebSocketPlus;\n","export const CLOSE_NORMAL = {\n  code: 1000,\n};\nexport const CLOSE_ABNORMAL = {\n  code: 1006,\n};\nexport const APP_NOT_AVAILABLE = {\n  code: 4100,\n  message: 'App not exists or realtime message service is disabled.',\n};\nexport const INVALID_LOGIN = {\n  code: 4103,\n  message: 'Malformed clientId.',\n};\nexport const SESSION_REQUIRED = {\n  code: 4105,\n  message: 'Message sent before session opened. ',\n};\nexport const READ_TIMEOUT = {\n  code: 4107,\n};\nexport const LOGIN_TIMEOUT = {\n  code: 4108,\n};\nexport const FRAME_TOO_LONG = {\n  code: 4109,\n};\nexport const INVALID_ORIGIN = {\n  code: 4110,\n  message: 'Access denied by domain whitelist.',\n};\nexport const SESSION_CONFLICT = {\n  code: 4111,\n};\nexport const INTERNAL_ERROR = {\n  code: 4200,\n  message: 'Internal error, please contact LeanCloud for support.',\n};\nexport const SEND_MESSAGE_TIMEOUT = {\n  code: 4201,\n};\nexport const CONVERSATION_SIGNATURE_FAILED = {\n  code: 4302,\n};\nexport const CONVERSATION_NOT_FOUND = {\n  code: 4303,\n};\nexport const CONVERSATION_FULL = {\n  code: 4304,\n};\nexport const CONVERSATION_REJECTED_BY_APP = {\n  code: 4305,\n};\nexport const CONVERSATION_UPDATE_FAILED = {\n  code: 4306,\n};\nexport const CONVERSATION_READ_ONLY = {\n  code: 4307,\n};\nexport const CONVERSATION_NOT_ALLOWED = {\n  code: 4308,\n};\nexport const INVALID_MESSAGING_TARGET = {\n  code: 4401,\n};\nexport const MESSAGE_REJECTED_BY_APP = {\n  code: 4402,\n};\n\nexport const createError = errorMessage => {\n  const {\n    code, reason, appCode, detail,\n    } = errorMessage;\n  const error = new Error(reason || detail);\n  return Object.assign(error, {\n    code, appCode, detail,\n  });\n};\n","module.exports = require(\"protobufjs/dist/protobuf-light\").newBuilder({})['import']({\n    \"package\": \"push_server.messages\",\n    \"options\": {\n        \"objc_class_prefix\": \"AVIM\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"JsonObjectMessage\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 1\n                }\n            ]\n        },\n        {\n            \"name\": \"UnreadTuple\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"int32\",\n                    \"name\": \"unread\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 4\n                }\n            ]\n        },\n        {\n            \"name\": \"LogItem\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"from\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"msgId\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"ackAt\",\n                    \"id\": 5\n                }\n            ]\n        },\n        {\n            \"name\": \"LoginCommand\",\n            \"fields\": []\n        },\n        {\n            \"name\": \"DataCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"ids\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"msg\",\n                    \"id\": 2\n                }\n            ]\n        },\n        {\n            \"name\": \"SessionCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"ua\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"r\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"tag\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"deviceId\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"sessionPeerIds\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"onlineSessionPeerIds\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"st\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"stTtl\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"deviceToken\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"sp\",\n                    \"id\": 15\n                }\n            ]\n        },\n        {\n            \"name\": \"ErrorCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"appCode\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"detail\",\n                    \"id\": 4\n                }\n            ]\n        },\n        {\n            \"name\": \"DirectCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"msg\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"uid\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"fromPeerId\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"offline\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"hasMore\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"toPeerIds\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"r\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"id\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"dt\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"roomId\",\n                    \"id\": 15\n                }\n            ]\n        },\n        {\n            \"name\": \"AckCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"uid\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"fromts\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"tots\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"type\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"ids\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"appCode\",\n                    \"id\": 11\n                }\n            ]\n        },\n        {\n            \"name\": \"UnreadCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"UnreadTuple\",\n                    \"name\": \"convs\",\n                    \"id\": 1\n                }\n            ]\n        },\n        {\n            \"name\": \"ConvCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"m\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"unique\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cdate\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"initBy\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"sort\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"limit\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"skip\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"flag\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"count\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"udate\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 15\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"results\",\n                    \"id\": 100\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"where\",\n                    \"id\": 101\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"attr\",\n                    \"id\": 103\n                }\n            ]\n        },\n        {\n            \"name\": \"RoomCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"roomId\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"roomPeerIds\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"byPeerId\",\n                    \"id\": 7\n                }\n            ]\n        },\n        {\n            \"name\": \"LogsCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"l\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"limit\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"tt\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"tmid\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"checksum\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"stored\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"LogItem\",\n                    \"name\": \"logs\",\n                    \"id\": 105\n                }\n            ]\n        },\n        {\n            \"name\": \"RcpCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"id\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"ReadTuple\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"ReadCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"cids\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"ReadTuple\",\n                    \"name\": \"convs\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"PresenceCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"StatusType\",\n                    \"name\": \"status\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"sessionPeerIds\",\n                    \"id\": 2\n                }\n            ]\n        },\n        {\n            \"name\": \"ReportCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"initiative\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"type\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"GenericCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"CommandType\",\n                    \"name\": \"cmd\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"OpType\",\n                    \"name\": \"op\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"appId\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"peerId\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"i\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"installationId\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"LoginCommand\",\n                    \"name\": \"loginMessage\",\n                    \"id\": 100\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"DataCommand\",\n                    \"name\": \"dataMessage\",\n                    \"id\": 101\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"SessionCommand\",\n                    \"name\": \"sessionMessage\",\n                    \"id\": 102\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ErrorCommand\",\n                    \"name\": \"errorMessage\",\n                    \"id\": 103\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"DirectCommand\",\n                    \"name\": \"directMessage\",\n                    \"id\": 104\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"AckCommand\",\n                    \"name\": \"ackMessage\",\n                    \"id\": 105\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"UnreadCommand\",\n                    \"name\": \"unreadMessage\",\n                    \"id\": 106\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ReadCommand\",\n                    \"name\": \"readMessage\",\n                    \"id\": 107\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"RcpCommand\",\n                    \"name\": \"rcpMessage\",\n                    \"id\": 108\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"LogsCommand\",\n                    \"name\": \"logsMessage\",\n                    \"id\": 109\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ConvCommand\",\n                    \"name\": \"convMessage\",\n                    \"id\": 110\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"RoomCommand\",\n                    \"name\": \"roomMessage\",\n                    \"id\": 111\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"PresenceCommand\",\n                    \"name\": \"presenceMessage\",\n                    \"id\": 112\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ReportCommand\",\n                    \"name\": \"reportMessage\",\n                    \"id\": 113\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"CommandType\",\n            \"values\": [\n                {\n                    \"name\": \"session\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"conv\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"direct\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"ack\",\n                    \"id\": 3\n                },\n                {\n                    \"name\": \"rcp\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"unread\",\n                    \"id\": 5\n                },\n                {\n                    \"name\": \"logs\",\n                    \"id\": 6\n                },\n                {\n                    \"name\": \"error\",\n                    \"id\": 7\n                },\n                {\n                    \"name\": \"login\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"data\",\n                    \"id\": 9\n                },\n                {\n                    \"name\": \"room\",\n                    \"id\": 10\n                },\n                {\n                    \"name\": \"read\",\n                    \"id\": 11\n                },\n                {\n                    \"name\": \"presence\",\n                    \"id\": 12\n                },\n                {\n                    \"name\": \"report\",\n                    \"id\": 13\n                },\n                {\n                    \"name\": \"echo\",\n                    \"id\": 14\n                }\n            ]\n        },\n        {\n            \"name\": \"OpType\",\n            \"values\": [\n                {\n                    \"name\": \"open\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"add\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"remove\",\n                    \"id\": 3\n                },\n                {\n                    \"name\": \"close\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"opened\",\n                    \"id\": 5\n                },\n                {\n                    \"name\": \"closed\",\n                    \"id\": 6\n                },\n                {\n                    \"name\": \"query\",\n                    \"id\": 7\n                },\n                {\n                    \"name\": \"query_result\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"conflict\",\n                    \"id\": 9\n                },\n                {\n                    \"name\": \"added\",\n                    \"id\": 10\n                },\n                {\n                    \"name\": \"removed\",\n                    \"id\": 11\n                },\n                {\n                    \"name\": \"start\",\n                    \"id\": 30\n                },\n                {\n                    \"name\": \"started\",\n                    \"id\": 31\n                },\n                {\n                    \"name\": \"joined\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"members_joined\",\n                    \"id\": 33\n                },\n                {\n                    \"name\": \"left\",\n                    \"id\": 39\n                },\n                {\n                    \"name\": \"members_left\",\n                    \"id\": 40\n                },\n                {\n                    \"name\": \"results\",\n                    \"id\": 42\n                },\n                {\n                    \"name\": \"count\",\n                    \"id\": 43\n                },\n                {\n                    \"name\": \"result\",\n                    \"id\": 44\n                },\n                {\n                    \"name\": \"update\",\n                    \"id\": 45\n                },\n                {\n                    \"name\": \"updated\",\n                    \"id\": 46\n                },\n                {\n                    \"name\": \"mute\",\n                    \"id\": 47\n                },\n                {\n                    \"name\": \"unmute\",\n                    \"id\": 48\n                },\n                {\n                    \"name\": \"join\",\n                    \"id\": 80\n                },\n                {\n                    \"name\": \"invite\",\n                    \"id\": 81\n                },\n                {\n                    \"name\": \"leave\",\n                    \"id\": 82\n                },\n                {\n                    \"name\": \"kick\",\n                    \"id\": 83\n                },\n                {\n                    \"name\": \"reject\",\n                    \"id\": 84\n                },\n                {\n                    \"name\": \"invited\",\n                    \"id\": 85\n                },\n                {\n                    \"name\": \"kicked\",\n                    \"id\": 86\n                },\n                {\n                    \"name\": \"upload\",\n                    \"id\": 100\n                },\n                {\n                    \"name\": \"uploaded\",\n                    \"id\": 101\n                }\n            ]\n        },\n        {\n            \"name\": \"StatusType\",\n            \"values\": [\n                {\n                    \"name\": \"on\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"off\",\n                    \"id\": 2\n                }\n            ]\n        }\n    ]\n}).build();\n","import messages from './message-compiled';\n\nconst {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  LoginCommand,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  CommandType,\n  OpType,\n  StatusType,\n} = messages.push_server.messages;\n\nexport {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  LoginCommand,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  CommandType,\n  OpType,\n  StatusType,\n};\n","import WebSocketPlus from './websocket-plus';\nimport { createError } from './errors';\nimport { GenericCommand, CommandType } from '../proto/message';\nimport { Promise } from 'rsvp';\nimport { default as d } from 'debug';\nimport { trim } from './utils';\n\nconst debug = d('LC:Connection');\n\nconst COMMAND_TIMEOUT = 20000;\n\nexport default class Connection extends WebSocketPlus {\n  constructor(...args) {\n    debug('initializing Connection');\n    super(...args);\n    this._commands = {};\n    this._serialId = 0;\n  }\n\n  send(command, waitingForRespond = true) {\n    const serialId = ++ this._serialId;\n    command.i = serialId; // eslint-disable-line no-param-reassign\n    debug('↑', trim(command), 'sent');\n\n    let message;\n    if (command.toBuffer) {\n      message = command.toBuffer();\n    } else if (command.toArrayBuffer) {\n      message = command.toArrayBuffer();\n    } else {\n      throw new TypeError(`${command} is not a GenericCommand`);\n    }\n\n    super.send(message);\n\n    if (!waitingForRespond) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      this._commands[serialId] = {\n        resolve,\n        reject,\n      };\n      setTimeout(\n        () => {\n          if (this._commands[serialId]) {\n            debug('✗', trim(command), 'timeout');\n            reject(new Error('Command Timeout.'));\n            delete this._commands[serialId];\n          }\n        },\n        COMMAND_TIMEOUT\n      );\n    });\n  }\n\n  handleMessage(msg) {\n    let message;\n    try {\n      message = GenericCommand.decode(msg);\n      debug('↓', trim(message), 'received');\n    } catch (e) {\n      console.warn('Decode message failed', msg);\n    }\n    this.emit('allmessage', message);\n    const serialId = message.i;\n    if (serialId) {\n      if (this._commands[serialId]) {\n        if (message.cmd === CommandType.error) {\n          this\n            ._commands[serialId]\n            .reject(createError(message.errorMessage));\n        } else {\n          this\n            ._commands[serialId]\n            .resolve(message);\n        }\n        delete this._commands[serialId];\n      } else {\n        console.warn(`Unexpected command received with serialId [${serialId}],\n         which have timed out or never been requested.`);\n      }\n    } else {\n      if (message.cmd === CommandType.error) {\n        this.emit('error', createError(message.errorMessage));\n      } else {\n        this.emit('message', message);\n      }\n    }\n  }\n\n  ping() {\n    return this.send(new GenericCommand({\n      cmd: 'echo',\n    }));\n  }\n}\n","import EventEmitter from 'eventemitter3';\n\nexport default class Client extends EventEmitter {\n  constructor(id, options = {}, connection, props) {\n    if (!(id === undefined || typeof id === 'string')) {\n      throw new TypeError(`Client id [${id}] is not a String`);\n    }\n    super();\n    Object.assign(this, {\n      id,\n      _connection: connection,\n      options,\n    }, props);\n  }\n\n  /**\n   * @abstract\n   */\n  _dispatchMessage(message) {\n    this.emit('message', message);\n  }\n}\n","import uuid from 'uuid';\n\nexport default class Message {\n  /**\n   * @implements AVMessage\n   * @param  {Object|String} content 消息内容\n   */\n  constructor(content) {\n    Object.assign(this, { content }, {\n      /**\n       * @type {String}\n       * @memberof Message#\n       */\n      id: uuid.v4(),\n      /**\n       * 消息所在的 conversation id\n       * @memberof Message#\n       * @type {String?}\n       */\n      cid: null,\n      /**\n       * 时间戳\n       * @memberof Message#\n       * @type {Date}\n       */\n      timestamp: new Date(),\n      /**\n       * 消息发送者\n       * @memberof Message#\n       * @type {String}\n       */\n      from: undefined,\n      /**\n       * 标记需要回执\n       * @memberof Message#\n       * @type {Boolean}\n       */\n      needReceipt: false,\n      /**\n       * 标记暂态消息\n       * @memberof Message#\n       * @type {Boolean}\n       */\n      transient: false,\n    });\n  }\n\n  /**\n   * 设置是否需要回执\n   * @param {Boolean} needReceipt\n   * @return {Message} self\n   */\n  setNeedReceipt(needReceipt) {\n    this.needReceipt = needReceipt;\n    return this;\n  }\n\n  /**\n   * 设置是否是暂态消息\n   * @param {Boolean} transient\n   * @return {Message} self\n   */\n  setTransient(transient) {\n    this.transient = transient;\n    return this;\n  }\n\n  /**\n   * 将当前消息序列化为 JSON 对象\n   * @return {Object}\n   */\n  toJSON() {\n    return this.content;\n  }\n\n  /**\n   * 判断给定的内容是否是有效的 Message，\n   * 该方法始终返回 true\n   * @returns {Boolean}\n   * @implements AVMessage.validate\n   */\n  static validate() {\n    return true;\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 如果子类提供了 message，返回该 message\n   * 如果没有提供，将 json 作为 content 实例化一个 Message\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {Message} message 子类提供的 message\n   * @return {Message}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message) {\n    return message || new this(json);\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { Promise } from 'rsvp';\nimport { decodeDate, keyRemap, union, difference } from './utils';\nimport IMClient from './im-client';\nimport {\n  GenericCommand,\n  ConvCommand,\n  JsonObjectMessage,\n  DirectCommand,\n  LogsCommand,\n} from '../proto/message';\nimport { createError } from './errors';\nimport Message from './messages/message';\nimport isEmpty from 'lodash/isEmpty';\nimport isPlainObject from 'lodash/isPlainObject';\nimport { default as d } from 'debug';\n\nconst debug = d('LC:Conversation');\n\nexport default class Conversation extends EventEmitter {\n  /**\n   * 无法直接实例化，请使用 {@link IMClient#createConversation} 创建新的对话\n   */\n  constructor(data, client) {\n    super();\n    Object.assign(this, {\n      /**\n       * @var id {String} 对话 id，对应 _Conversation 表中的 objectId\n       * @memberof Conversation#\n       */\n      // id,\n      /**\n       * @var creator {String} 对话创建者\n       * @memberof Conversation#\n       */\n      // creator,\n      /**\n       * @var createdAt {Date} 对话创建时间\n       * @memberof Conversation#\n       */\n      // createdAt,\n      /**\n       * @var updatedAt {Date} 对话更新时间\n       * @memberof Conversation#\n       */\n      // updatedAt,\n      /**\n       * @var lastMessageAt {Date} 最后一条消息时间\n       * @memberof Conversation#\n       */\n      // lastMessageAt,\n      /**\n       * @var lastMessage {?Message} 最后一条消息\n       * @memberof Conversation#\n       */\n      // lastMessage,\n      /**\n       * 对该对话设置了静音的用户列表\n       * @memberof Conversation#\n       * @type {?String[]}\n       */\n      mutedMembers: [],\n      /**\n       * 参与该对话的用户列表\n       * @memberof Conversation#\n       * @type {String[]}\n       */\n      members: [],\n      _attributes: {},\n      /**\n       * 暂态对话标记\n       * @memberof Conversation#\n       * @type {Boolean}\n       */\n      transient: false,\n      /**\n       * 当前用户静音该对话标记\n       * @memberof Conversation#\n       * @type {Boolean}\n       */\n      muted: false,\n    }, keyRemap({\n      attributes: '_attributes',\n      name: '_name',\n    }, data));\n    this.members = Array.from(new Set(this.members));\n    if (client instanceof IMClient) {\n      this._client = client;\n    } else {\n      throw new TypeError('Conversation must be initialized with a client');\n    }\n    [\n      'kicked',\n      'membersjoined',\n      'membersleft',\n      'message',\n    ].forEach(event => this.on(\n      event,\n      payload => this._debug(`${event} event emitted.`, payload)\n    ));\n  }\n\n  set createdAt(value) {\n    this._createdAt = decodeDate(value);\n  }\n  get createdAt() {\n    return this._createdAt;\n  }\n  set updatedAt(value) {\n    this._updatedAt = decodeDate(value);\n  }\n  get updatedAt() {\n    return this._updatedAt;\n  }\n  set lastMessageAt(value) {\n    this._lastMessageAt = decodeDate(value);\n  }\n  get lastMessageAt() {\n    return this._lastMessageAt;\n  }\n\n  /**\n   * 对话额外属性\n   * @type {Object}\n   */\n  get attributes() {\n    if (typeof this._pendingAttributes !== 'undefined') {\n      return this._pendingAttributes;\n    }\n    return this._attributes;\n  }\n  set attributes(value) {\n    this.setAttributes(value);\n  }\n  /**\n   * 设置对话额外属性\n   * @param {Object} map    key-value 对\n   * @param {assign} [assign=false] 使用 Object.assign 更新属性，而不是替换整个 attributes\n   * @return {Conversation} self\n   */\n  setAttributes(map, assign = false) {\n    this._debug(`set attributes: value=${JSON.stringify(map)}, assign=${assign}`);\n    if (!isPlainObject(map)) {\n      throw new TypeError('attributes must be a plain object');\n    }\n    if (!assign) {\n      this._pendingAttributes = map;\n    } else {\n      this._pendingAttributes = Object.assign({}, this.attributes, map);\n    }\n    return this;\n  }\n  /**\n   * 设置对话额外属性\n   * @param {String} key\n   * @param {*} value\n   * @return {Conversation} self\n   */\n  setAttribute(key, value) {\n    if (typeof this._pendingAttributes === 'undefined') {\n      this._pendingAttributes = {};\n    }\n    this._pendingAttributes[key] = value;\n    return this;\n  }\n  /**\n   * 对话名字\n   * @type {String}\n   */\n  get name() {\n    if (typeof this._pendingName !== 'undefined') {\n      return this._pendingName;\n    }\n    return this._name;\n  }\n  set name(value) {\n    this.setName(value);\n  }\n  /**\n   * 设置对话名字\n   * @param {String} value\n   * @return {Conversation} self\n   */\n  setName(value) {\n    this._debug(`set name: ${value}`);\n    this._pendingName = value;\n    return this;\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  _send(command) {\n    /* eslint-disable no-param-reassign */\n    if (command.cmd === null) {\n      command.cmd = 'conv';\n    }\n    if (command.cmd === 'conv' && command.convMessage === null) {\n      command.convMessage = new ConvCommand();\n    }\n    if (command.convMessage && command.convMessage.cid === null) {\n      command.convMessage.cid = this.id;\n    }\n    /* eslint-enable no-param-reassign */\n    return this._client._send(command);\n  }\n  /**\n   * 保存当前对话的属性至服务器\n   * @return {Promise.<Conversation>} self\n   */\n  save() {\n    this._debug('save');\n    const attr = {};\n    if (typeof this._pendingAttributes !== 'undefined') {\n      attr.attr = this._pendingAttributes;\n    }\n    if (typeof this._pendingNamed !== 'undefined') {\n      attr.name = this._pendingName;\n    }\n    if (isEmpty(attr)) {\n      this._debug('nothing touched, resolve with self');\n      return Promise.resolve(this);\n    }\n    this._debug(`attr: ${JSON.stringify(attr)}`);\n    const convMessage = new ConvCommand({\n      attr: new JsonObjectMessage({\n        data: JSON.stringify(attr),\n      }),\n    });\n    return this\n      ._send(new GenericCommand({\n        op: 'update',\n        convMessage,\n      }))\n      .then(resCommand => {\n        this.updatedAt = resCommand.convMessage.udate;\n        if (typeof this._pendingAttributes !== 'undefined') {\n          this._attributes = this._pendingAttributes;\n          delete this._pendingAttributes;\n        }\n        if (typeof this._pendingNamed !== 'undefined') {\n          this._name = this._pendingName;\n          delete this._pendingName;\n        }\n        return this;\n      });\n  }\n\n  /**\n   * 从服务器更新对话的属性\n   * @return {Promise.<Conversation>} self\n   */\n  fetch() {\n    return this\n      ._client\n      .getQuery()\n      .equalTo('objectId', this.id)\n      .find()\n      .then(() => this);\n  }\n\n  /**\n   * 静音，客户端拒绝收到服务器端的离线推送通知\n   * @return {Promise.<Conversation>} self\n   */\n  mute() {\n    this._debug('mute');\n    return this._send(new GenericCommand({\n      op: 'mute',\n    })).then(() => {\n      if (!this.transient) {\n        this.muted = true;\n        this.mutedMembers = union(this.mutedMembers, [this._client.id]);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * 取消静音\n   * @return {Promise.<Conversation>} self\n   */\n  unmute() {\n    this._debug('unmute');\n    return this._send(new GenericCommand({\n      op: 'unmute',\n    })).then(() => {\n      if (!this.transient) {\n        this.muted = false;\n        this.mutedMembers = difference(this.mutedMembers, [this._client.id]);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * 获取对话人数，或暂态对话的在线人数\n   * @return {Promise.<Number>}\n   */\n  count() {\n    this._debug('unmute');\n    return this._send(new GenericCommand({\n      op: 'count',\n    })).then(resCommand => resCommand.convMessage.count);\n  }\n\n  /**\n   * 增加成员\n   * @param {String|String[]} clientIds 新增成员 client id\n   * @return {Promise.<Conversation>} self\n   */\n  add(clientIds) {\n    this._debug('add', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const convMessage = new ConvCommand({\n      m: clientIds,\n    });\n    return this._send(new GenericCommand({\n      op: 'add',\n      convMessage,\n    })).then(() => {\n      if (!this.transient) {\n        this.members = union(this.members, clientIds);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * 剔除成员\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<Conversation>} self\n   */\n  remove(clientIds) {\n    this._debug('remove', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const convMessage = new ConvCommand({\n      m: clientIds,\n    });\n    return this._send(new GenericCommand({\n      op: 'remove',\n      convMessage,\n    })).then(() => {\n      if (!this.transient) {\n        this.members = difference(this.members, clientIds);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * （当前用户）加入该对话\n   * @return {Promise.<Conversation>} self\n   */\n  join() {\n    this._debug('join');\n    return this.add(this._client.id);\n  }\n\n  /**\n   * （当前用户）退出该对话\n   * @return {Promise.<Conversation>} self\n   */\n  quit() {\n    this._debug('quit');\n    return this.remove(this._client.id);\n  }\n\n  /**\n   * 发送消息\n   * @param  {Message} message 消息，Message 及其子类的实例\n   * @return {Promise.<Message>} 发送的消息\n   */\n  send(message) {\n    this._debug(message, 'send');\n    if (!(message instanceof Message)) {\n      throw new TypeError(`${message} is not a Message`);\n    }\n    Object.assign(message, {\n      cid: this.id,\n      from: this._client.id,\n    });\n    let msg = message.toJSON();\n    if (typeof msg !== 'string') {\n      msg = JSON.stringify(msg);\n    }\n    return this._send(new GenericCommand({\n      cmd: 'direct',\n      directMessage: new DirectCommand({\n        msg,\n        cid: this.id,\n        r: message.needReceipt,\n        transient: message.transient,\n        dt: message.id,\n      }),\n    })).then(resCommand => {\n      const {\n        ackMessage: {\n          uid,\n          t,\n          code,\n          reason,\n          appCode,\n        },\n      } = resCommand;\n      if (code !== null) {\n        throw createError({\n          code, reason, appCode,\n        });\n      }\n      Object.assign(message, {\n        id: uid,\n        timestamp: new Date(t.toNumber()),\n      });\n      this.lastMessage = message;\n      this.lastMessageAt = message.timestamp;\n      return message;\n    });\n  }\n\n  /**\n   * 查询消息记录\n   * 如果仅需实现消息记录翻页查询需求，建议使用 {@link Conversation#getMessagesIterator}\n   * @param  {Object} [options]\n   * @param  {Date}   [options.beforeTime] 限制查询结果为小于这个该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] 限制查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Date}   [options.afterTime] 限制查询结果为大于这个该时间之前的消息\n   * @param  {String} [options.afterMessageId] 限制查询结果为该消息之后的消息，需要与 afterTime 同时使用，为防止某时刻有重复消息\n   * @param  {Number} [options.limit] 限制查询结果的数量，目前服务端默认为 20\n   * @return {Promise.<Message[]>} 消息列表\n   */\n  queryMessages(options = {}) {\n    this._debug('query messages', options);\n    if (options.beforeMessageId && !options.beforeTime) {\n      throw new Error('query option beforeMessageId must be used with option beforeTime');\n    }\n    if (options.afterMessageId && !options.afterTime) {\n      throw new Error('query option afterMessageId must be used with option afterTime');\n    }\n    const conditions = keyRemap({\n      beforeTime: 't',\n      beforeMessageId: 'mid',\n      afterTime: 'tt',\n      afterMessageId: 'tmid',\n      limit: 'l',\n    }, options);\n    if (conditions.t instanceof Date) {\n      conditions.t = conditions.t.getTime();\n    }\n    if (conditions.tt instanceof Date) {\n      conditions.tt = conditions.tt.getTime();\n    }\n    return this._send(new GenericCommand({\n      cmd: 'logs',\n      logsMessage: new LogsCommand(\n        Object.assign(conditions, {\n          cid: this.id,\n        })\n      ),\n    })).then(resCommand =>\n      resCommand.logsMessage.logs.map(log => {\n        const messageProps = {\n          id: log.msgId,\n          cid: this.id,\n          timestamp: new Date(log.timestamp.toNumber()),\n          from: log.from,\n        };\n        const message = this._client._messageParser.parse(log.data);\n        Object.assign(message, messageProps);\n        return message;\n      })\n    );\n  }\n\n  /**\n   * 获取消息翻页迭代器\n   * @param  {Object} [options]\n   * @param  {Date}   [options.beforeTime] 限制起始查询结果为小于这个该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] 限制起始查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Number} [options.limit] 限制每页查询结果的数量，目前服务端默认为 20\n   * @return {Iterater.<Promise.<Message[]>>} infinite [iterator]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterator}，调用其 next 方法返回获取下一页消息的 Promise\n   * @example\n   * var iterator = conversation.getMessagesIterator({ limit: 10 });\n   * iterator.next().value.then(function(messages) {\n   *   // messages: [message1, ..., message10]\n   * });\n   * iterator.next().value.then(function(messages) {\n   *   // messages: [message11, ..., message20]\n   * });\n   * iterator.next().value.then(function(messages) {\n   *   // No more messages\n   *   // messages: []\n   * });\n   */\n  getMessagesIterator({ beforeTime, beforeMessageId, limit } = {}) {\n    let promise;\n    return {\n      next: () => {\n        if (promise === undefined) {\n          // first call\n          promise = this.queryMessages({\n            limit,\n            beforeTime,\n            beforeMessageId,\n          });\n        } else {\n          promise = promise.then(prevMessages => {\n            if (prevMessages.length === 0 || prevMessages.length < limit) {\n              // no more messages\n              return [];\n            }\n            return this.queryMessages({\n              beforeTime: prevMessages[0].timestamp,\n              beforeMessageId: prevMessages[0].id,\n              limit,\n            });\n          });\n        }\n        return {\n          value: promise,\n          done: false,\n        };\n      },\n    };\n  }\n}\n","import { default as d } from 'debug';\nconst debug = d('LC:ConversationQuery');\n\nexport default class ConversationQuery {\n  static _encode(value) {\n    if (value instanceof Date) {\n      return { __type: 'Date', iso: value.toJSON() };\n    }\n    if (value instanceof RegExp) {\n      return value.source;\n    }\n    return value;\n  }\n\n  static _quote(s) {\n    return `\\\\Q${s.replace('\\\\E', '\\\\E\\\\\\\\E\\\\Q')}\\\\E`;\n  }\n\n  static _calculateFlag(options) {\n    return [\n      'withLastMessages',\n      'compact',\n    ].reduce(\n      (prev, key) => (prev << 1) + (Boolean)(options[key]),\n      0\n    );\n  }\n\n  /**\n   * Create a ConversationQuery\n   * @param  {IMClient} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._where = {};\n    this._extraOptions = {};\n  }\n\n  _addCondition(key, condition, value) {\n    // Check if we already have a condition\n    if (!this._where[key]) {\n      this._where[key] = {};\n    }\n    this._where[key][condition] = this.constructor._encode(value);\n    return this;\n  }\n\n  toJSON() {\n    const json = {\n      where: this._where,\n      flag: this.constructor._calculateFlag(this._extraOptions),\n    };\n    if (typeof this._skip !== 'undefined') json.skip = this._skip;\n    if (typeof this._limit !== 'undefined') json.limit = this._limit;\n    debug(json);\n    return json;\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员包含某些成员即可返回\n   * @param {string[]} peerIds - 成员 ID 列表\n   * @return {ConversationQuery} self\n   */\n  containsMembers(peerIds) {\n    return this.containsAll('m', peerIds);\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员条件满足条件的才返回\n   *\n   * @param {string[]} - 成员 ID 列表\n   * @param {Boolean} includeSelf - 是否包含自己\n   * @return {ConversationQuery} self\n   */\n  withMembers(peerIds, includeSelf) {\n    const peerIdsSet = new Set(peerIds);\n    if (includeSelf) {\n      peerIdsSet.add(this._client.id);\n    }\n    this.sizeEqualTo('m', peerIdsSet.size);\n    return this.containsMembers(Array.from(peerIdsSet));\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  equalTo(key, value) {\n    this._where[key] = this.constructor._encode(value);\n    return this;\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于条件时即可返回\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThan(key, value) {\n    return this._addCondition(key, '$lt', value);\n  }\n\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于等于条件时即可返回\n\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$lte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThan(key, value) {\n    return this._addCondition(key, '$gt', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$gte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足不等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  notEqualTo(key, value) {\n    return this._addCondition(key, '$ne', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containedIn(key, values) {\n    return this._addCondition(key, '$in', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值不包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  notContainsIn(key, values) {\n    return this._addCondition(key, '$nin', values);\n  }\n  /**\n   * 增加查询条件，当conversation的属性中对应的字段中的元素包含所有的值才可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containsAll(key, values) {\n    return this._addCondition(key, '$all', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含此字符串即可返回\n   *\n   * @param {string} key\n   * @param {string} subString\n   * @return {ConversationQuery} self\n   */\n  contains(key, subString) {\n    return this._addCondition(key, '$regex', ConversationQuery._quote(subString));\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串起始即可返回\n   *\n   * @param {string} key\n   * @param {string} prefix\n   * @return {ConversationQuery} self\n   */\n  startsWith(key, prefix) {\n    return this._addCondition(key, '$regex', `^${ConversationQuery._quote(prefix)}`);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串结束即可返回\n   *\n   * @param {string} key\n   * @param {string} suffix\n   * @return {ConversationQuery} self\n   */\n  endsWith(key, suffix) {\n    return this._addCondition(key, '$regex', `${ConversationQuery._quote(suffix)}$`);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值满足提供的正则表达式即可返回\n   *\n   * @param {string} key\n   * @param {RegExp} regex\n   * @return {ConversationQuery} self\n   */\n  matches(key, regex) {\n    this._addCondition(key, '$regex', regex);\n    // Javascript regex options support mig as inline options but store them\n    // as properties of the object. We support mi & should migrate them to\n    // modifiers\n    let _modifiers = '';\n    if (regex.ignoreCase) { _modifiers += 'i'; }\n    if (regex.multiline) { _modifiers += 'm'; }\n\n    if (_modifiers && _modifiers.length) {\n      this._addCondition(key, '$options', _modifiers);\n    }\n    return this;\n  }\n\n  /**\n   * 添加查询约束条件，查找 key 类型是数组，该数组的长度匹配提供的数值\n   *\n   * @param {string} key\n   * @param {Number} length\n   * @return {ConversationQuery} self\n   */\n  sizeEqualTo(key, length) {\n    return this._addCondition(key, '$size', length);\n  }\n\n  /**\n   * 设置返回集合的大小上限\n   *\n   * @param {Number} limit - 上限\n   * @return {ConversationQuery} self\n   */\n  limit(limit) {\n    this._limit = limit;\n    return this;\n  }\n\n  /**\n   * 设置返回集合的起始位置，一般用于分页\n   *\n   * @param {Number} skip - 起始位置跳过几个对象\n   * @return {ConversationQuery} self\n   */\n  skip(skip) {\n    this._skip = skip;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  ascending(key) {\n    this._order = key;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addAscending(key) {\n    if (this._order) {\n      this._order += `,${key}`;\n    } else {\n      this._order = key;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  descending(key) {\n    this._order = `-${key}`;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addDescending(key) {\n    if (this._order) {\n      this._order += `,-${key}`;\n    } else {\n      this._order = `-${key}`;\n    }\n    return key;\n  }\n\n  /**\n   * 设置返回的 conversations 带上最后一条消息\n   * @param  {Boolean} enabled\n   * @return {ConversationQuery} self\n   */\n  withLastMessages(enabled) {\n    this._extraOptions.withLastMessages = enabled;\n    return this;\n  }\n\n  /**\n   * 设置返回的 conversations 为精简模式，即不含成员列表\n   * @param  {Boolean} enabled\n   * @return {ConversationQuery} self\n   */\n  compact(enabled) {\n    this._extraOptions.compact = enabled;\n    return this;\n  }\n\n  /**\n   * 执行查询\n   * @return {Promise.<Conversation[]>}\n   */\n  find() {\n    return this._client._executeQuery(this);\n  }\n}\n","{\n  \"name\": \"leancloud-realtime\",\n  \"version\": \"2.3.5\",\n  \"description\": \"LeanCloud Realtime Message JavaScript SDK\",\n  \"main\": \"dist/bundle.js\",\n  \"jsnext:main\": \"src/realtime.js\",\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"grunt test --stack && npm run report\",\n    \"report\": \"istanbul report --include coverage/coverage.json --print text lcovonly\",\n    \"doc\": \"jsdoc src -r -d docs -t node_modules/docdash\",\n    \"convert-pb\": \"pbjs proto/message.proto -t commonjs > proto/message-compiled.js && sed -i '' 's/protobufjs/protobufjs\\\\/dist\\\\/protobuf-light/g' ./proto/message-compiled.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/leancloud/js-realtime-sdk.git\"\n  },\n  \"keywords\": [\n    \"leancloud\",\n    \"realtime\",\n    \"message\"\n  ],\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/leancloud/js-realtime-sdk/issues\"\n  },\n  \"homepage\": \"https://leancloud.cn/\",\n  \"devDependencies\": {\n    \"babel-eslint\": \"^6.0.0\",\n    \"babel-plugin-transform-es2015-classes\": \"^6.5.2\",\n    \"babel-plugin-transform-runtime\": \"^6.6.0\",\n    \"babel-preset-es2015-rollup\": \"^1.1.1\",\n    \"docdash\": \"^0.1.0\",\n    \"eslint-config-airbnb\": \"^6.0.0\",\n    \"eslint-plugin-react\": \"^4.0.0\",\n    \"grunt\": \"^0.4.5\",\n    \"grunt-contrib-connect\": \"^1.0.0\",\n    \"grunt-contrib-uglify\": \"^1.0.0\",\n    \"grunt-contrib-watch\": \"^1.0.0\",\n    \"grunt-env\": \"^0.4.4\",\n    \"grunt-envify\": \"0.0.3\",\n    \"grunt-eslint\": \"^18.0.0\",\n    \"grunt-istanbul\": \"^0.7.0\",\n    \"grunt-mocha-test\": \"^0.12.7\",\n    \"grunt-rollup\": \"^0.6.2\",\n    \"grunt-saucelabs\": \"^8.6.1\",\n    \"istanbul\": \"git+https://github.com/Victorystick/istanbul.git#es-modules-support\",\n    \"jsdoc\": \"^3.4.0\",\n    \"load-grunt-tasks\": \"^3.4.1\",\n    \"mocha\": \"^2.3.4\",\n    \"qiniu\": \"^6.1.9\",\n    \"rollup\": \"^0.25.3\",\n    \"rollup-plugin-babel\": \"^2.4.0\",\n    \"rollup-plugin-commonjs\": \"^2.2.1\",\n    \"rollup-plugin-istanbul\": \"^1.0.0\",\n    \"rollup-plugin-json\": \"^2.0.0\",\n    \"rollup-plugin-node-resolve\": \"^1.4.0\",\n    \"should\": \"^8.2.2\",\n    \"should-sinon\": \"0.0.5\",\n    \"sinon\": \"2.0.0-pre\"\n  },\n  \"dependencies\": {\n    \"babel-runtime\": \"^6.6.1\",\n    \"debug\": \"^2.2.0\",\n    \"eventemitter3\": \"^1.1.1\",\n    \"javascript-state-machine\": \"^2.3.5\",\n    \"lodash\": \"^4.6.0\",\n    \"protobufjs\": \"^5.0.1\",\n    \"rsvp\": \"^3.2.1\",\n    \"superagent\": \"~1.7\",\n    \"superagent-promise\": \"^1.1.0\",\n    \"uuid\": \"^2.0.1\",\n    \"ws\": \"^1.0.1\"\n  },\n  \"browser\": {\n    \"ws\": false,\n    \"sinon\": false\n  }\n}\n","import Client from './client';\nimport Conversation from './conversation';\nimport ConversationQuery from './conversation-query';\nimport {\n  GenericCommand,\n  SessionCommand,\n  ConvCommand,\n  AckCommand,\n  JsonObjectMessage,\n  CommandType,\n  OpType,\n} from '../proto/message';\nimport * as Errors from './errors';\nimport { Promise } from 'rsvp';\nimport throttle from 'lodash/throttle';\nimport { tap, Cache, keyRemap, union, difference, trim } from './utils';\nimport { default as d } from 'debug';\nimport { version as VERSION } from '../package.json';\n\nconst debug = d('LC:IMClient');\n\nexport default class IMClient extends Client {\n  /**\n   * 无法直接实例化，请使用 {@link Realtime#createIMClient} 创建新的 IMClient。\n   *\n   * @param  {String} [id] 客户端 id\n   * @param  {Object} [options]\n   * @param  {Function} [options.signatureFactory] open session 时的签名方法 // TODO need details\n   */\n  constructor(...args) {\n    /**\n     * @var id {String} 客户端 id\n     * @memberof IMClient#\n     */\n    super(...args);\n    if (!this._messageParser) {\n      throw new Error('IMClient must be initialized with a MessageParser');\n    }\n    this._conversationCache = new Cache(`client:${this.id}`);\n    this._ackMessageBuffer = {};\n    [\n      'invited',\n      'kicked',\n      'membersjoined',\n      'membersleft',\n      'message',\n      'unhandledmessage',\n    ].forEach(event => this.on(\n      event,\n      payload => this._debug(`${event} event emitted.`, payload)\n    ));\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  _dispatchMessage(message) {\n    this._debug(trim(message), 'received');\n    if (message.cmd === CommandType.conv) {\n      return this._dispatchConvMessage(message);\n    }\n    if (message.cmd === CommandType.direct) {\n      return this._dispatchDirectMessage(message);\n    }\n    if (message.cmd === CommandType.session) {\n      return this._dispatchSessionMessage(message);\n    }\n    this.emit('unhandledmessage', message);\n    return Promise.resolve();\n  }\n\n  _dispatchSessionMessage(message) {\n    const {\n      sessionMessage: {\n        code, reason,\n      },\n    } = message;\n    switch (message.op) {\n      case OpType.closed: {\n        if (code === Errors.SESSION_CONFLICT.code) {\n          this.emit('conflict', {\n            code, reason,\n          });\n        }\n        return this.emit('close', {\n          code, reason,\n        });\n      }\n      default:\n        this.emit('unhandledmessage', message);\n        return Promise.reject(new Error('Unrecognized session command'));\n    }\n  }\n\n  _dispatchConvMessage(message) {\n    const {\n      convMessage,\n      convMessage: {\n        initBy, m,\n      },\n    } = message;\n    switch (message.op) {\n      case OpType.joined: {\n        return this.getConversation(convMessage.cid).then(\n          conversation => this.emit('invited', {\n            conversation,\n            invitedBy: initBy,\n          })\n        );\n      }\n      case OpType.left: {\n        return this.getConversation(convMessage.cid).then(conversation => {\n          // eslint-disable-next-line no-param-reassign\n          conversation.members = difference(conversation.members, [this.id]);\n          const payload = {\n            kickedBy: initBy,\n          };\n          this.emit('kicked', Object.assign({\n            conversation,\n          }, payload));\n          conversation.emit('kicked', payload);\n        });\n      }\n      case OpType.members_joined: {\n        return this.getConversation(convMessage.cid).then(conversation => {\n          // eslint-disable-next-line no-param-reassign\n          conversation.members = union(conversation.members, convMessage.m);\n          const payload = {\n            invitedBy: initBy,\n            members: m,\n          };\n          this.emit('membersjoined', Object.assign({\n            conversation,\n          }, payload));\n          conversation.emit('membersjoined', payload);\n        });\n      }\n      case OpType.members_left: {\n        return this.getConversation(convMessage.cid).then(conversation => {\n          // eslint-disable-next-line no-param-reassign\n          conversation.members = difference(conversation.members, convMessage.m);\n          const payload = {\n            kickedBy: initBy,\n            members: m,\n          };\n          this.emit('membersleft', Object.assign({\n            conversation,\n          }, payload));\n          conversation.emit('membersleft', payload);\n        });\n      }\n      default:\n        this.emit('unhandledmessage', message);\n        return Promise.reject(new Error('Unrecognized conversation command'));\n    }\n  }\n\n  _dispatchDirectMessage(originalMessage) {\n    const {\n      directMessage,\n      directMessage: {\n        id, cid, fromPeerId, timestamp, transient,\n      },\n    } = originalMessage;\n    return this.getConversation(directMessage.cid).then(conversation => {\n      const messageProps = {\n        id,\n        cid,\n        timestamp: new Date(timestamp.toNumber()),\n        from: fromPeerId,\n        transient,\n      };\n      const message = this._messageParser.parse(directMessage.msg);\n      Object.assign(message, messageProps);\n      conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n      conversation.lastMessageAt = message.timestamp; // eslint-disable-line no-param-reassign\n      this.emit('message', {\n        conversation,\n        message,\n      });\n      conversation.emit('message', message);\n      if (!(transient || conversation.transient)) {\n        this._sendAck(message);\n      }\n    });\n  }\n\n  _sendAck(message) {\n    this._debug('send ack for', message);\n    const { cid } = message;\n    if (!cid) {\n      return Promise.reject(new Error('missing cid'));\n    }\n    if (!this._ackMessageBuffer[cid]) {\n      this._ackMessageBuffer[cid] = [];\n    }\n    this._ackMessageBuffer[cid].push(message);\n    if (!this._doSendAckThrottled) {\n      this._doSendAckThrottled = throttle(this._doSendAck.bind(this), 1000);\n    }\n    return this._doSendAckThrottled();\n  }\n\n  _doSendAck() {\n    if (!this._connection.is('connected')) {\n      // if not connected, just skip everything\n      return Promise.resolve();\n    }\n    debug('do send ack', this._ackMessageBuffer);\n    return Promise.all(Object.keys(this._ackMessageBuffer).map(cid => {\n      const convAckMessages = this._ackMessageBuffer[cid];\n      const timestamps = convAckMessages.map(message => message.timestamp);\n      const command = new GenericCommand({\n        cmd: 'ack',\n        ackMessage: new AckCommand({\n          cid,\n          fromts: Math.min.apply(null, timestamps),\n          tots: Math.max.apply(null, timestamps),\n        }),\n      });\n      return this._send(command, false).then(() => delete this._ackMessageBuffer[cid]);\n    }));\n  }\n\n  _send(cmd, ...args) {\n    const command = cmd;\n    if (this.id) {\n      command.peerId = this.id;\n    }\n    return this._connection.send(command, ...args);\n  }\n\n  _open(appId, tag, deviceId, isReconnect = false) {\n    this._debug('open session');\n    return Promise\n      .resolve(new GenericCommand({\n        cmd: 'session',\n        op: 'open',\n        appId,\n        sessionMessage: new SessionCommand({\n          ua: `js/${VERSION}`,\n          r: isReconnect,\n          tag,\n          deviceId,\n        }),\n      }))\n      .then(cmd => {\n        const command = cmd;\n        if (this.options.signatureFactory) {\n          this._debug(`call signatureFactory with [${this.id}]`);\n          return Promise\n            .resolve()\n            .then(() => this.options.signatureFactory(this.id))\n            .then(tap(signatureResult => this._debug('signatureResult', signatureResult)))\n            .then((signatureResult = {}) => {\n              const {\n                signature,\n                timestamp,\n                nonce,\n              } = signatureResult;\n              if (typeof signature !== 'string'\n                  || typeof timestamp !== 'number'\n                  || typeof nonce !== 'string') {\n                throw new Error('malformed signature');\n              }\n              Object.assign(command.sessionMessage, {\n                s: signature,\n                t: timestamp,\n                n: nonce,\n              });\n              return command;\n            }, error => {\n              this._debug(error);\n              throw new Error(`signatureFactory error: ${error.message}`);\n            });\n        }\n        return command;\n      })\n      .then(this._send.bind(this))\n      .then(resCommand => {\n        const peerId = resCommand.peerId;\n        if (!peerId) {\n          console.warn('Unexpected session opened without peerId.');\n          return;\n        }\n        this.id = peerId;\n      });\n  }\n\n  /**\n   * 关闭客户端\n   * @return {Promise}\n   */\n  close() {\n    this._debug('close session');\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'close',\n    });\n    return this._send(command).then(\n      () => {\n        this.emit('close', {\n          code: 0,\n        });\n      }\n    );\n  }\n  /**\n   * 获取 client 列表中在线的 client，每次查询最多 20 个 clientId，超出部分会被忽略\n   * @param  {String[]} clientIds 要查询的 client ids\n   * @return {Primse.<String[]>} 在线的 client ids\n   */\n  ping(clientIds) {\n    this._debug('ping');\n    if (!(clientIds instanceof Array)) {\n      throw new TypeError(`clientIds ${clientIds} is not an Array`);\n    }\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'query',\n      sessionMessage: new SessionCommand({\n        sessionPeerIds: clientIds,\n      }),\n    });\n    return this._send(command)\n      .then(resCommand => resCommand.sessionMessage.onlineSessionPeerIds);\n  }\n\n  /**\n   * 获取某个特定的 conversation\n   * @param  {String} id 对话 id，对应 _Conversation 表中的 objectId\n   * @return {Promise.<Conversation>}\n   */\n  getConversation(id) {\n    if (typeof id !== 'string') {\n      throw new TypeError(`${id} is not a String`);\n    }\n    const cachedConversation = this._conversationCache.get(id);\n    if (cachedConversation) {\n      return Promise.resolve(cachedConversation);\n    }\n    return this\n      .getQuery()\n      .equalTo('objectId', id)\n      .find()\n      .then(conversations => conversations[0] || null);\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询对话\n   * @return {ConversationQuery}\n   */\n  getQuery() {\n    return new ConversationQuery(this);\n  }\n\n  _executeQuery(query) {\n    const queryJSON = query.toJSON();\n    queryJSON.where = new JsonObjectMessage({\n      data: JSON.stringify(queryJSON.where),\n    });\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'query',\n      convMessage: new ConvCommand(queryJSON),\n    });\n    return this\n      ._send(command)\n      .then(resCommand => {\n        try {\n          return JSON.parse(resCommand.convMessage.results.data);\n        } catch (error) {\n          const commandString = JSON.stringify(trim(resCommand));\n          throw new Error(`Parse query result failed: ${error.message}. Command: ${commandString}`);\n        }\n      })\n      .then(conversations => conversations.map(this._parseConversationFromRawData.bind(this)))\n      .then(conversations => conversations.map(fetchedConversation => {\n        let conversation = this._conversationCache.get(fetchedConversation.id);\n        if (!conversation) {\n          conversation = fetchedConversation;\n          this._debug('no match, set cache');\n          this._conversationCache.set(fetchedConversation.id, fetchedConversation);\n        } else {\n          this._debug('update cached conversation');\n          [\n            'name',\n            'creator',\n            'createdAt',\n            'updatedAt',\n            'lastMessageAt',\n            'lastMessage',\n            'mutedMembers',\n            'members',\n            '_attributes',\n            'transient',\n            'muted',\n          ].forEach(key => {\n            const value = fetchedConversation[key];\n            if (value !== null) conversation[key] = value;\n          });\n          delete conversation._pendingAttributes;\n          delete conversation._pendingName;\n        }\n        return conversation;\n      }));\n  }\n\n  _parseConversationFromRawData(rawData) {\n    const data = keyRemap({\n      objectId: 'id',\n      lm: 'lastMessageAt',\n      msg: 'lastMessage',\n      m: 'members',\n      attr: 'attributes',\n      tr: 'transient',\n      c: 'creator',\n      mu: 'mutedMembers',\n    }, rawData);\n    if (data.lastMessage) {\n      data.lastMessage = this._messageParser.parse(data.lastMessage);\n    }\n    return new Conversation(data, this);\n  }\n\n  /**\n   * 创建一个 conversation\n   * @param {Object} options\n   * @param {String[]} options.members 对话的初始成员列表，默认包含当前 client\n   * @param {String} [options.name] 对话的名字\n   * @param {Object} [options.attributes] 额外属性\n   * @param {Boolean} [options.transient=false] 暂态会话\n   * @param {Boolean} [options.unique=false] 唯一对话，当其为 true 时，如果当前已经有相同成员的对话存在则返回该对话，否则会创建新的对话\n   * @return {Promise.<Conversation>}\n   */\n  createConversation(options = {}) {\n    let attr = {};\n    const {\n      name,\n      attributes,\n      members,\n      transient,\n      unique,\n    } = options;\n    if (!Array.isArray(members)) {\n      throw new TypeError(`conversation members ${members} is not an array`);\n    }\n    if (name) {\n      if (typeof name !== 'string') {\n        throw new TypeError(`conversation name ${name} is not a string`);\n      }\n      attr.name = name;\n    }\n    if (attributes) {\n      attr.attr = attributes;\n    }\n    attr = new JsonObjectMessage({\n      data: JSON.stringify(attr),\n    });\n\n    const startCommandJson = {\n      m: members,\n      attr,\n      transient,\n      unique,\n    };\n\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'start',\n      convMessage: new ConvCommand(startCommandJson),\n    });\n\n    return this\n      ._send(command)\n      .then(resCommand => new Conversation(Object.assign({}, options, {\n        id: resCommand.convMessage.cid,\n        createdAt: resCommand.convMessage.cdate,\n        updatedAt: resCommand.convMessage.cdate,\n        lastMessageAt: null,\n        creator: this.id,\n        members: members.concat([this.id]),\n      }), this))\n      .then(tap(conversation =>\n        this._conversationCache.set(conversation.id, conversation)\n      ));\n  }\n}\n","import { default as d } from 'debug';\nimport isPlainObject from 'lodash/isPlainObject';\n\nconst debug = d('LC:MessageParser');\n\nexport default class MessageParser {\n  constructor() {\n    this._messageClasses = [];\n  }\n\n  register(messageClass) {\n    if (\n      messageClass &&\n      messageClass.parse &&\n      messageClass.prototype &&\n      messageClass.prototype.toJSON\n    ) {\n      this._messageClasses.unshift(messageClass);\n    } else {\n      throw new TypeError('Invalid messageClass');\n    }\n  }\n\n  parse(text) {\n    debug('parsing message:', text);\n    let content;\n    try {\n      content = JSON.parse(text);\n    } catch (error) {\n      content = text;\n    }\n    for (const Klass of this._messageClasses) {\n      const contentCopy = isPlainObject(content) ? Object.assign({}, content) : content;\n      let valid;\n      let result;\n      try {\n        valid = Klass.validate(contentCopy);\n      } catch (error) {\n        // eslint-disable-line no-empty\n      }\n      if (valid) {\n        try {\n          result = Klass.parse(contentCopy);\n        } catch (error) {\n          console.warn('parsing a valid message content error', {\n            error,\n            Klass,\n            content: contentCopy,\n          });\n        }\n        if (result !== undefined) {\n          debug('parse result:', result);\n          return result;\n        }\n      }\n    }\n    throw new Error('No Message Class matched');\n  }\n}\n","import Message from './message';\n\nexport default class TypedMessage extends Message {\n  /**\n   * 所有内置的富媒体消息均继承自本类\n   * @extends Message\n   */\n  constructor() {\n    super({});\n  }\n\n  /** @type {String} */\n  set text(text) {\n    return this.setText(text);\n  }\n  get text() {\n    return this.getText();\n  }\n\n  /** @type {Object} */\n  set attributes(attributes) {\n    return this.setAttributes(attributes);\n  }\n  get attributes() {\n    return this.getAttributes();\n  }\n\n  /**\n   * @param {String} text\n   * @return {TypedMessage} self\n   */\n  setText(text) {\n    this.content.text = text;\n    return this;\n  }\n  /**\n   * @return {String}\n   */\n  getText() {\n    return this.content.text;\n  }\n\n  /**\n   * @param {Object} attributes\n   * @return {TypedMessage} self\n   */\n  setAttributes(attributes) {\n    this.content.attrs = attributes;\n    return this;\n  }\n  /**\n   * @return {Object}\n   */\n  getAttributes() {\n    return this.content.attrs;\n  }\n\n  /**\n   * 获得额外信息，向输出的 json 中添加字段。\n   *\n   * @abstract\n   * @return {Object} key-value\n   * @example\n   * export default class CustomMessage extends TypedMessage {\n   *   // 子类无须重载 {@link TypedMessage#toJSON} 即可向输出的 json 中添加标记类型的字段\n   *   _getExtras() {\n   *     return {\n   *       _lctype: 1,\n   *       customField: this.customField,\n   *     };\n   *   }\n   *   static validate(json) {\n   *     return json._lctype === 1;\n   *   }\n   * }\n   */\n  _getExtras() {\n    return {\n      _lctype: 0,\n    };\n  }\n\n  toJSON() {\n    return Object.assign({\n      _lctext: this.getText(),\n      _lcattrs: this.getAttributes(),\n    }, this._getExtras());\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 为给定的 message 设置 text 与 attributes 属性，返回该 message\n   * 如果子类没有提供 message，new this()\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {Message} message 子类提供的 message\n   * @return {Message}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message = new this()) {\n    message\n      .setText(json._lctext)\n      .setAttributes(json._lcattrs);\n    return super.parse(json, message);\n  }\n}\n","import TypedMessage from './typed-message';\n\nexport default class TextMessage extends TypedMessage {\n  /**\n   * 文类类型消息\n   * @extends TypedMessage\n   * @param  {String} [text='']\n   * @throws {TypeError} text 不是 String 类型\n   */\n  constructor(text = '') {\n    if (typeof text !== 'string') {\n      throw new TypeError(`${text} is not a string`);\n    }\n    super();\n    this.setText(text);\n  }\n\n  /**\n   * 向输出的 json 中添加标记类型的 _lctype 字段\n   * @override\n   * @inner\n   */\n  _getExtras() {\n    return {\n      _lctype: -1,\n    };\n  }\n\n  /**\n   * 判断给定的内容是否是有效的 TextMessage\n   * @returns {Boolean}\n   * @implements AVMessage.validate\n   */\n  static validate(json) {\n    return json._lctype === -1;\n  }\n\n  // https://phabricator.babeljs.io/T116\n  static parse(...args) {\n    return super.parse(...args);\n  }\n}\n","import Connection from './connection';\nimport * as Errors from './errors';\nimport { Promise } from 'rsvp';\nimport { default as d } from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport { default as superagentPromise } from 'superagent-promise';\nimport superagent from 'superagent';\nimport uuid from 'uuid';\nimport { tap, Cache, trim } from './utils';\nimport Client from './client';\nimport IMClient from './im-client';\nimport MessageParser from './message-parser';\nimport Message from './messages/message';\nimport TextMessage from './messages/text-message';\n\nconst agent = superagentPromise(superagent, Promise);\nconst debug = d('LC:Realtime');\n\nexport default class Realtime extends EventEmitter {\n  /**\n   * @param  {Object} options\n   * @param  {String} options.appId\n   * @param  {String} options.appKey\n   * @param  {String} [options.region='cn'] 节点 id\n   * @param  {Boolean} [options.pushOfflineMessages=false] 启用推送离线消息模式（默认为发送未读消息通知模式）\n   * @param  {Boolean} [options.ssl=true] 使用 wss 进行连接\n   */\n  constructor(options) {\n    debug('initializing Realtime');\n    super();\n    if (typeof options.appId !== 'string') {\n      throw new TypeError(`appId [${options.appId}] is not a string`);\n    }\n    if (typeof options.appKey !== 'string') {\n      throw new TypeError('appKey is not a string');\n    }\n    this._options = Object.assign({\n      appId: undefined,\n      appKey: undefined,\n      region: 'cn',\n      pushOfflineMessages: false,\n      ssl: true,\n    }, options);\n    this._id = uuid.v4();\n    this._cache = new Cache('endpoints');\n    this._clients = {};\n    this._messageParser = new MessageParser();\n    [\n      Message,\n      TextMessage,\n    ].forEach(this._messageParser.register.bind(this._messageParser));\n  }\n\n  _open() {\n    if (this._openPromise) return this._openPromise;\n\n    let protocolsVersion = 3;\n    if (this._options.pushOfflineMessages) {\n      // 不推送离线消息，而是发送对话的未读通知\n      protocolsVersion = 1;\n    }\n    const protocol = `lc.protobuf.${protocolsVersion}`;\n\n    this._openPromise = new Promise((resolve, reject) => {\n      debug('No connection established, create a new one.');\n      const connection = new Connection(\n        () => this._getEndpoints(this._options),\n        protocol\n      );\n      connection.binaryType = 'arraybuffer';\n      connection.on('open', () => resolve(connection));\n      connection.on('error', reject);\n      connection.on('message', this._dispatchMessage.bind(this));\n      // event proxy\n      ['disconnect', 'reconnect', 'retry'].forEach(\n        event => connection.on(event, payload => {\n          debug(`${event} event emitted.`, payload);\n          this.emit(event, payload);\n        })\n      );\n      // override handleClose\n      connection.handleClose = function handleClose(event) {\n        const fatalError = Array.find([\n          Errors.APP_NOT_AVAILABLE,\n          Errors.INVALID_LOGIN,\n          Errors.INVALID_ORIGIN,\n        ], error => error.code === event.code);\n        if (fatalError) {\n          // in these cases, SDK should throw.\n          const error = new Error(`${fatalError.message || event.reason}`);\n          error.code = event.code;\n          this.throw(error);\n        } else {\n          // reconnect\n          this.disconnect();\n        }\n      };\n    });\n\n    return this._openPromise;\n  }\n\n  _getEndpoints(options) {\n    return Promise.resolve(\n      this._cache.get('endpoints') ||\n      this\n        .constructor\n        ._fetchEndpointsInfo(options)\n        .then(\n          tap(info => this._cache.set('endpoints', info, info.ttl))\n        )\n    )\n    .then(info => {\n      debug('endpoint info:', info);\n      return [info.server, info.secondary];\n    });\n  }\n\n  static _fetchEndpointsInfo({ appId, region, ssl, _debug }) {\n    debug('fetch endpoint info');\n    let router;\n    switch (region) {\n      case 'cn':\n        router = 'router-g0-push.leancloud.cn/v1/route';\n        break;\n      case 'us':\n        router = 'router-a0-push.leancloud.cn/v1/route';\n        break;\n      default:\n        throw new Error(`Region [${region}] is not supported.`);\n    }\n    const protocol = global.location ? '//' : 'https://';\n\n    return agent\n      .get(`${protocol}${router}`)\n      .query({\n        appId,\n        secure: ssl,\n        debug: _debug,\n        _t: Date.now(),\n      })\n      .timeout(20000)\n      .then(\n        res => res.body\n      );\n  }\n\n  _close() {\n    if (this._openPromise) {\n      this._openPromise.then(connection => connection.close());\n    }\n    delete this._openPromise;\n  }\n\n  _register(client) {\n    if (!(client instanceof Client)) {\n      throw new TypeError(`${client} is not a Client`);\n    }\n    if (!client.id) {\n      throw new Error('Client must have an id to be registered');\n    }\n    this._clients[client.id] = client;\n  }\n\n  _deregister(client) {\n    if (!(client instanceof Client)) {\n      throw new TypeError(`${client} is not a Client`);\n    }\n    if (!client.id) {\n      throw new Error('Client must have an id to be deregistered');\n    }\n    delete this._clients[client.id];\n    if (Object.getOwnPropertyNames(this._clients).length === 0) {\n      this._close();\n    }\n  }\n\n  _dispatchMessage(message) {\n    if (message.peerId !== null) {\n      const client = this._clients[message.peerId];\n      if (client) {\n        return Promise.resolve(client._dispatchMessage(message)).catch(debug);\n      }\n      return debug(\n        '[WARN] Unexpected message received without any live client match',\n        trim(message)\n      );\n    }\n    return debug('[WARN] Unexpected message received without peerId', trim(message));\n  }\n\n  /**\n   * 创建一个即时通讯客户端\n   * @param  {String} [id] 客户端 id，如果不指定，服务端会随机生成一个\n   * @param  {Object} [clientOptions] 详细参数 @see {@link IMClient}\n   * @param  {String} [tag] 客户端类型标记，以支持单点登录功能\n   * @return {Promise.<IMClient>}\n   */\n  createIMClient(id, clientOptions, tag) {\n    if (id) {\n      if (this._clients[id] !== undefined) {\n        return Promise.reject(new Error(`IMClient[${id}] is already created`));\n      }\n      this._clients[id] = null;\n    }\n    return this._open().then(connection => {\n      const client = new IMClient(id, clientOptions, connection, {\n        _messageParser: this._messageParser,\n      });\n      connection.on('reconnect', () => client._open(this._options.appId, tag, this._id, true));\n      client.on('close', () => this._deregister(client), this);\n      return client._open(this._options.appId, tag, this._id)\n        .then(() => {\n          this._register(client);\n          return client;\n        });\n    });\n  }\n\n  createPushClient() {\n    return this._open();\n  }\n\n  /**\n   * 注册消息类\n   *\n   * 在接收消息、查询消息时，会按照消息类注册顺序的逆序依次尝试解析消息内容\n   *\n   * @param  {Function} messageClass 消息类，需要实现 {@link AVMessage} 接口，建议继承自 {@link Message}\n   * @throws {TypeError} 如果 messageClass 没有实现 {@link AVMessage} 接口则抛出异常\n   */\n  register(...params) {\n    return this._messageParser.register(...params);\n  }\n}\n"],"names":["Promise","debug","Errors.SESSION_CONFLICT","VERSION","Errors.APP_NOT_AVAILABLE","Errors.INVALID_LOGIN","Errors.INVALID_ORIGIN"],"mappings":"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"}